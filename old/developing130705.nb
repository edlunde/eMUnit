(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[      8579,        236]
NotebookOptionsPosition[      7775,        204]
NotebookOutlinePosition[      8152,        221]
CellTagsIndexPosition[      8109,        218]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
ToDo:
Test AssertEquals
Refactor format test result
runTest only catch assert-exceptions
RunTest report if non-existent test is run\
\>", "Text",
 CellChangeTimes->{{3.581768562936214*^9, 3.581768590565977*^9}, {
  3.581840701717978*^9, 3.58184076308335*^9}, {3.581851980794738*^9, 
  3.581851983417935*^9}, {3.58187240613227*^9, 3.581872414199696*^9}, {
  3.5818747903355827`*^9, 3.58187479342828*^9}, {3.5819315084500437`*^9, 
  3.581931511136066*^9}, {3.5819958193401957`*^9, 3.581995862250408*^9}, {
  3.581997277371264*^9, 3.581997292968514*^9}}],

Cell[CellGroupData[{

Cell["Load", "Subsection",
 CellChangeTimes->{{3.581851866452701*^9, 3.581851871929957*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", 
   RowBox[{"\"\<eMUnit`\>\"", ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<eMUnit.m\>\""}]}], 
   "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"?", "AssertEquals"}], "\[IndentingNewLine]", 
 RowBox[{"?", "AssertTrue"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ListTests"}], "\[IndentingNewLine]", 
 RowBox[{"?", "AddTest"}], "\[IndentingNewLine]", 
 RowBox[{"?", "RunTest"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"?", "DeleteTest"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TestEMUnitPackage", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.5818484023257933`*^9, 3.581848427412692*^9}, {
   3.581848463469602*^9, 3.581848493661785*^9}, {3.581848563827791*^9, 
   3.581848596970037*^9}, 3.581848645442906*^9, {3.581849868655651*^9, 
   3.581849880764333*^9}, {3.581851013530964*^9, 3.581851014977862*^9}, {
   3.581997216343136*^9, 3.581997223093801*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Subsection",
 CellChangeTimes->{{3.5818518639068537`*^9, 3.58185186444191*^9}}],

Cell[BoxData[
 RowBox[{"TestEMUnitPackage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.58193116053482*^9, 3.581931163479122*^9}, 
   3.581931282046006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Develop new", "Subsection",
 CellChangeTimes->{{3.581872954204172*^9, 3.581872957418704*^9}, {
  3.5819288585884447`*^9, 3.581928858905981*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "AssertTrue", "]"}]], "Input",
 CellChangeTimes->{{3.5819957774077473`*^9, 3.581995782891518*^9}, {
  3.581996766050282*^9, 3.581996766565864*^9}}],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"AssertTrue", ",", "HoldFirst"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"AssertTrue", "[", "expr_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{"expr", ",", "Null", ",", 
    RowBox[{"Throw", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"HoldComplete", "[", 
         RowBox[{"AssertTrue", "[", "expr", "]"}], "]"}], ",", "expr"}], 
       "}"}], ",", "\"\<AssertTrue\>\""}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.581995580120039*^9, 3.5819956021238537`*^9}, {
  3.581996770346012*^9, 3.5819968009455357`*^9}}],

Cell[BoxData[{
 RowBox[{"a", ":=", "False"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Catch", "[", 
   RowBox[{
    RowBox[{"AssertTrue", "[", "a", "]"}], ",", "\"\<AssertTrue\>\""}], "]"}],
   "===", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"HoldComplete", "[", 
     RowBox[{"AssertTrue", "[", "a", "]"}], "]"}], ",", "False"}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.5818738288449697`*^9, 3.581873832165213*^9}, {
  3.5819288885545197`*^9, 3.581928932042186*^9}, {3.581929237007568*^9, 
  3.581929271388976*^9}, {3.5819293867110767`*^9, 3.581929396508211*^9}, {
  3.58192944211447*^9, 3.58192944496203*^9}, {3.5819296527282124`*^9, 
  3.581929695618853*^9}, {3.581929739549801*^9, 3.5819297444059687`*^9}, {
  3.581929920663535*^9, 3.581929927760584*^9}, {3.581930994759274*^9, 
  3.581931006325432*^9}, {3.581996842669002*^9, 3.581996870892308*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AddTest", "[", 
   RowBox[{
   "eMUnit`PackageTests`frameworkTests", ",", "\"\<testAssertTrueSuccess\>\"",
     ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "result"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", ":=", "True"}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{
         RowBox[{"Catch", "[", 
          RowBox[{
           RowBox[{"AssertTrue", "[", "a", "]"}], ",", "\"\<AssertTrue\>\""}],
           "]"}], "===", "Null"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", "result"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Throw", "[", 
          RowBox[{
           RowBox[{"{", "\"\<testAssertTrueSuccess failed\>\"", "}"}], ",", 
           " ", "\"\<AssertEquals\>\""}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AddTest", "[", 
   RowBox[{
   "eMUnit`PackageTests`frameworkTests", ",", "\"\<testAssertTrueFailure\>\"",
     ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "result"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", ":=", "False"}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{
         RowBox[{"Catch", "[", 
          RowBox[{
           RowBox[{"AssertTrue", "[", "a", "]"}], ",", "\"\<AssertTrue\>\""}],
           "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"HoldComplete", "[", 
            RowBox[{"AssertTrue", "[", "a", "]"}], "]"}], ",", "False"}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", "result"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Throw", "[", 
          RowBox[{
           RowBox[{"{", "\"\<testAssertTrueFailure failed\>\"", "}"}], ",", 
           " ", "\"\<AssertEquals\>\""}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"RunTest", "[", 
  RowBox[{
  "eMUnit`PackageTests`frameworkTests", ",", 
   "\"\<testAssertTrueSuccess\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.581872961228589*^9, 3.581872995742158*^9}, {
   3.581873389180526*^9, 3.581873397882745*^9}, {3.581873432075238*^9, 
   3.581873445473415*^9}, {3.581873499034945*^9, 3.5818735071828613`*^9}, {
   3.581873538461474*^9, 3.581873601221479*^9}, {3.581873691586887*^9, 
   3.581873713192922*^9}, {3.581873837718219*^9, 3.581873838693778*^9}, 
   3.5819955867217407`*^9, {3.581995637365384*^9, 3.5819956409732428`*^9}, {
   3.581995680591714*^9, 3.5819957561407547`*^9}, {3.581995889783749*^9, 
   3.5819958993560247`*^9}, {3.5819959534940977`*^9, 3.581996066511161*^9}, {
   3.5819961960450153`*^9, 3.581996270337932*^9}, {3.5819968838209553`*^9, 
   3.5819970672798758`*^9}}],

Cell[BoxData[
 RowBox[{"ListTests", "[", "eMUnit`PackageTests`frameworkTests", 
  "]"}]], "Input",
 CellChangeTimes->{{3.581995915602172*^9, 3.581995920148285*^9}}],

Cell[BoxData[
 RowBox[{"TestEMUnitPackage", "[", "]"}]], "Input",
 CellChangeTimes->{{3.581873312310718*^9, 3.581873313853218*^9}, {
  3.581873532063047*^9, 3.581873533013349*^9}}]
}, Open  ]]
},
WindowSize->{673, 728},
WindowMargins->{{3, Automatic}, {Automatic, 17}},
ShowSelection->True,
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 561, 12, 106, "Text"],
Cell[CellGroupData[{
Cell[1143, 36, 92, 1, 44, "Subsection"],
Cell[1238, 39, 978, 19, 182, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2253, 63, 93, 1, 44, "Subsection"],
Cell[2349, 66, 156, 3, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2542, 74, 150, 2, 44, "Subsection"],
Cell[2695, 78, 187, 3, 28, "Input"],
Cell[2885, 83, 629, 15, 80, "Input"],
Cell[3517, 100, 865, 18, 63, "Input"],
Cell[4385, 120, 3024, 71, 318, "Input"],
Cell[7412, 193, 164, 3, 28, "Input"],
Cell[7579, 198, 180, 3, 28, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
